name: Build wheels

on:
  push:
    branches:
    - master
    tags:
    - v*

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build_wheels:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          # - { os: macos-13, arch: 'x86_64' }
          - { os: macos-latest, arch: 'arm64' }
          - { os: ubuntu-latest, arch: 'x86_64' }
          # - { name: windows-x64, os: windows-latest}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
      if: runner.os != 'Windows'

    - name: Set up build environment (Windows, MSYS2)
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          autotools
          make
          git
          base-devel
          mingw-w64-x86_64-clang
          mingw-w64-x86_64-python
          mingw-w64-x86_64-python-pip
      if: runner.os == 'Windows'
    
    - name: Set up build environment (Linux)
      run: |
        echo "CC=gcc-14" >> $GITHUB_ENV
        echo "CXX=g++-14" >> $GITHUB_ENV
      if: runner.os == 'Linux'
      
    - name: Set up build environment (MacOs)
      run: |
        brew install readline
        brew install automake
        brew install autogen
        uname -m
      if: runner.os == 'macOS'

    - name: Install cibuildwheel (Linux, Macos)
      run: pip install cibuildwheel
      if: runner.os != 'Windows'

    - name: Install cibuildwheel (Windows, MSYS2)
      shell: msys2 {0}
      run: python -m pip install cibuildwheel
      if: runner.os == 'Windows'

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

    - name: Build wheels (Linux/MacOs)
      env:
        CIBW_ARCHS_MACOS: ${{ matrix.config.arch }}
      run: python -m cibuildwheel --output-dir wheelhouse
      shell: bash
      if: runner.os != 'Windows'

    - name: Build wheels (Windows)
      shell: msys2 {0}
      run: python -m cibuildwheel --output-dir wheelhouse
      if: runner.os == 'Windows'

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.config.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl
        if-no-files-found: error

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: wheelhouse
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}